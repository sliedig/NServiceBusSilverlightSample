//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace SilverlightClient.CancelOrderService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CancelOrderRequest", Namespace="http://schemas.datacontract.org/2004/07/RequestServer.Messages")]
    public partial class CancelOrderRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int OrderIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorCodes", Namespace="http://schemas.datacontract.org/2004/07/RequestServer.Messages")]
    public enum ErrorCodes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fail = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CancelOrderService.IWcfServiceOf_CancelOrderRequest_ErrorCodes")]
    public interface IWcfServiceOf_CancelOrderRequest_ErrorCodes {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWcfServiceOf_CancelOrderRequest_ErrorCodes/Process", ReplyAction="http://tempuri.org/IWcfServiceOf_CancelOrderRequest_ErrorCodes/ProcessResponse")]
        System.IAsyncResult BeginProcess(SilverlightClient.CancelOrderService.CancelOrderRequest request, System.AsyncCallback callback, object asyncState);
        
        SilverlightClient.CancelOrderService.ErrorCodes EndProcess(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWcfServiceOf_CancelOrderRequest_ErrorCodesChannel : SilverlightClient.CancelOrderService.IWcfServiceOf_CancelOrderRequest_ErrorCodes, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SilverlightClient.CancelOrderService.ErrorCodes Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SilverlightClient.CancelOrderService.ErrorCodes)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WcfServiceOf_CancelOrderRequest_ErrorCodesClient : System.ServiceModel.ClientBase<SilverlightClient.CancelOrderService.IWcfServiceOf_CancelOrderRequest_ErrorCodes>, SilverlightClient.CancelOrderService.IWcfServiceOf_CancelOrderRequest_ErrorCodes {
        
        private BeginOperationDelegate onBeginProcessDelegate;
        
        private EndOperationDelegate onEndProcessDelegate;
        
        private System.Threading.SendOrPostCallback onProcessCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public WcfServiceOf_CancelOrderRequest_ErrorCodesClient() {
        }
        
        public WcfServiceOf_CancelOrderRequest_ErrorCodesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WcfServiceOf_CancelOrderRequest_ErrorCodesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfServiceOf_CancelOrderRequest_ErrorCodesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfServiceOf_CancelOrderRequest_ErrorCodesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<ProcessCompletedEventArgs> ProcessCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightClient.CancelOrderService.IWcfServiceOf_CancelOrderRequest_ErrorCodes.BeginProcess(SilverlightClient.CancelOrderService.CancelOrderRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProcess(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SilverlightClient.CancelOrderService.ErrorCodes SilverlightClient.CancelOrderService.IWcfServiceOf_CancelOrderRequest_ErrorCodes.EndProcess(System.IAsyncResult result) {
            return base.Channel.EndProcess(result);
        }
        
        private System.IAsyncResult OnBeginProcess(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SilverlightClient.CancelOrderService.CancelOrderRequest request = ((SilverlightClient.CancelOrderService.CancelOrderRequest)(inValues[0]));
            return ((SilverlightClient.CancelOrderService.IWcfServiceOf_CancelOrderRequest_ErrorCodes)(this)).BeginProcess(request, callback, asyncState);
        }
        
        private object[] OnEndProcess(System.IAsyncResult result) {
            SilverlightClient.CancelOrderService.ErrorCodes retVal = ((SilverlightClient.CancelOrderService.IWcfServiceOf_CancelOrderRequest_ErrorCodes)(this)).EndProcess(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProcessCompleted(object state) {
            if ((this.ProcessCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProcessCompleted(this, new ProcessCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProcessAsync(SilverlightClient.CancelOrderService.CancelOrderRequest request) {
            this.ProcessAsync(request, null);
        }
        
        public void ProcessAsync(SilverlightClient.CancelOrderService.CancelOrderRequest request, object userState) {
            if ((this.onBeginProcessDelegate == null)) {
                this.onBeginProcessDelegate = new BeginOperationDelegate(this.OnBeginProcess);
            }
            if ((this.onEndProcessDelegate == null)) {
                this.onEndProcessDelegate = new EndOperationDelegate(this.OnEndProcess);
            }
            if ((this.onProcessCompletedDelegate == null)) {
                this.onProcessCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProcessCompleted);
            }
            base.InvokeAsync(this.onBeginProcessDelegate, new object[] {
                        request}, this.onEndProcessDelegate, this.onProcessCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SilverlightClient.CancelOrderService.IWcfServiceOf_CancelOrderRequest_ErrorCodes CreateChannel() {
            return new WcfServiceOf_CancelOrderRequest_ErrorCodesClientChannel(this);
        }
        
        private class WcfServiceOf_CancelOrderRequest_ErrorCodesClientChannel : ChannelBase<SilverlightClient.CancelOrderService.IWcfServiceOf_CancelOrderRequest_ErrorCodes>, SilverlightClient.CancelOrderService.IWcfServiceOf_CancelOrderRequest_ErrorCodes {
            
            public WcfServiceOf_CancelOrderRequest_ErrorCodesClientChannel(System.ServiceModel.ClientBase<SilverlightClient.CancelOrderService.IWcfServiceOf_CancelOrderRequest_ErrorCodes> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginProcess(SilverlightClient.CancelOrderService.CancelOrderRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("Process", _args, callback, asyncState);
                return _result;
            }
            
            public SilverlightClient.CancelOrderService.ErrorCodes EndProcess(System.IAsyncResult result) {
                object[] _args = new object[0];
                SilverlightClient.CancelOrderService.ErrorCodes _result = ((SilverlightClient.CancelOrderService.ErrorCodes)(base.EndInvoke("Process", _args, result)));
                return _result;
            }
        }
    }
}
